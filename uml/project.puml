@startuml

class Project <<final>> {
    - _connectorList: ConnectorList
    - _name: String
    - _signalList: SignalList
    - _stateList: StateList
    + {static} Project()
    + getConnectorList(): ConnectorList
    + getName(): String
    + getSignalList(): SignalList
    + getStateList: StateList
    + setName(name: String)
}

class State <<abstract>> {
    - _name: String
    + {static} State()
    + getName(): String
    + setName(name: String)
}

class MealyState <<final>> extends State {
    + {static} MealyState()
}

class MooreState <<final>> extends State {
    - _valueList: ValueList
    + {static} MooreState()
    + getValueList(): ValueList
}

class Connector <<abstract>> {
    - _conditionList: ConditionList
    - _source: State
    - _target: State
    + {static} Connector()
    + getConditionList(): ConditionList
    + getSource(): State
    + getTarget(): State
    + setSource(source: State)
    + setTarget(target: State)
}

class MealyConnector <<final>> extends Connector {
    - _valueList: ValueList
    + {static} MealyConnector()
    + getValueList(): ValueList
}

class MooreConnector <<final>> extends Connector {
    + {static} MooreConnector()
}

class SignalList <<final>> extends List {
    + {static} SignalList()
    + append(signal: Signal)
    + getByName(name: String): Signal
    + remove(signal: Signal)
}

class Signal <<final>> {
    + {static} DIRECTION_UNKNOWN = 0
    + {static} DIRECTION_INPUT = 1
    + {static} DIRECTION_OUTPUT = 2
    - _direction: Number
    - _name: String
    + {static} Signal()
    + getDirection(): Number
    + getName(): String
    + getValue(): String
    + setDirection(direction: Number)
    + setName(name: String)
}

class Value <<final>> {
    - _name: String
    - _value: String
    + {static} Value()
    + getName(): String
    + getValue(): String
    + setName(name: String)
    + setValue(name: String)
}

class List <<abstract>> {
    - _items
    + append(item: Object)
    + clear()
    + get(index: Number): Object
    + length(): Number
    + remove(item: Object)
}

class ValueList <<final>> extends List {
    + {static} ValueList()
    + append(value: Value)
    + getByName(name: String): Value
    + remove(value: Value)
}

class ProjectIO <<static>> {
    + {static} read(json: String): Project
    + {static} write(project: Project): String
}

class ConnectorList <<final>> extends List {
    + {static} ConnectorList()
    + append(connector: Connector)
    + remove(connector: Connector)
}

class ConditionList <<final>> extends List {
    + {static} ConditionList()
    + append(valueList: ValueList)
    + remove(valueList: ValueList)
}

class StateList <<final>> extends List {
    + {static} StateList()
    + append(state: State)
    + getByName(name: String): State
    + remove(state: State)
}

ConnectorList --* Project
Connector --* ConnectorList
StateList --* Project
State --* StateList
SignalList --* Project
Signal --* SignalList
ConditionList --* Connector
ValueList --* ConditionList
ValueList --* MealyConnector
ValueList --* MooreState
Value --* ValueList

@enduml